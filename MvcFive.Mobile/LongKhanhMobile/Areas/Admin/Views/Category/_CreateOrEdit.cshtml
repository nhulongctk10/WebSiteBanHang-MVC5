@model Category

<div class="form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new
        {
            htmlAttributes = new
            {
                @class = "form-control",
                id = "CategoryName"
            }
        })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Alias, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Alias, new
        {
            htmlAttributes = new
            {
                @class = "form-control",
                id = "Alias"
            }
        })
        @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ParentId, "ParentId", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("ParentId", null, "*** Chọn nhóm cha ***", htmlAttributes: new
        {
            @class = "form-control"
        })
        @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Description, new
        {
            htmlAttributes = new
            {
                @class = "form-control",
                row = 3
            }
        })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.Label("Upload", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @if (!string.IsNullOrEmpty(Model.IconPath))
        {
            <img src="@Url.Content(Model.IconPath)" alt="@Model.IconPath" />
        }
        else
        {   <text>Chưa Hình đại diện, chọn hình đại diện </text>}
        <br/>
        @Html.HiddenFor(model=>model.IconPath)
        @(Html.TextBox("upload",null,new{@class="form-control",type="file"}))

        @Html.ValidationMessageFor(model => model.IconPath, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.OrderNo, htmlAttributes: new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.EditorFor(model => model.OrderNo, new {htmlAttributes = new {@class = "form-control"}})
        @Html.ValidationMessageFor(model => model.OrderNo, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Actived, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <div class="checkbox">
            @Html.EditorFor(model => model.Actived)
            @Html.ValidationMessageFor(model => model.Actived, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
